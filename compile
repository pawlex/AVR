#!/usr/bin/env bash
SIMFILES=( "rtl/sim.v" )
SIMFILES=( "rtl/tb.v" "rtl/top.v" )
SIMFILES+=( "./sim/uart/uart.v" )
SIMFILES+=( "./sim/uart/uart_rx.v" )
SIMFILES+=( "./sim/uart/uart_tx.v" )

SIMFILES+=( "rtl/avr_io_uart.v" )
SIMFILES+=( "rtl/avr_core.v" )
SIMFILES+=( "rtl/priority_encoder.v" )
SIMFILES+=( "rtl/flash.v" )
SIMFILES+=( "rtl/avr_io_out.v" )
SIMFILES+=( "rtl/ram.v" )
SIMFILES+=( "rtl/avr_io_timer.v" )
#SIMFILES+=( "rtl/avr_systick.v" )

IVERILOG='iverilog'
SIMFLAGS='-DSIMULATION'
SIMOUTFL='out.vvp'
WAVEFILE='dump.vcd'
## TODO:  Find a better way to do this.  
LIBPATH=`pwd`
OPTS="-g2005-sv -y$LIBPATH"

# Grab the PID of GTKWAVE (if exists)
GTKWAVEPID=`ps a | grep gtkwave | grep -v "grep" | awk '{print $1}'`

# Compile the design simulation.
if ! ${IVERILOG} $SIMFLAGS ${OPTS} -o $SIMOUTFL ${SIMFILES[@]}; then
    echo "**** Simulation failed ****"
    exit
fi

# Clean up the RTL.
find -name "*.v"  -exec ./bin/vtidy -n {} 1>/dev/null \;
find -name "*.sv" -exec ./bin/vtidy -n {} 1>/dev/null \;

# Execute the simulation.
echo "########################### BEGIN SIM OUTPUT ###########################"
vvp out.vvp | grep -v "will conflict with an escaped identifier." # don't display ram_array dump warning
echo "###########################  END SIM OUTPUT  ###########################"

# Launch gtkwave (if not already running).
if [ -z $GTKWAVEPID ]; then 
    gtkwave -r gtkwaverc dump.vcd&
else
    printf "\n"
    printf "GTKWAVE already running: $GTKWAVEPID \n"
    echo "CTRL+SHIFT+R to reload waveform in GTKWAVE"
    printf "\n"
fi
